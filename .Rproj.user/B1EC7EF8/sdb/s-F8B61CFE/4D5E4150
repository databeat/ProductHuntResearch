{
    "collab_server" : "",
    "contents" : "# PRODUCT HUNT\n\nlibrary(lubridate)\nlibrary(dplyr)\nlibrary(caret)\n\n# read in the data\nposts <- read.csv(file = \"/Users/jonathanortiz/code/ProductHunt/jq/ProductHunt_Posts_11242014_to_11232016.csv\", header = TRUE)\nstr(posts) # check out the data\n\n# rename the 'day' column to 'date' and set to Date\nnames(posts)[names(posts)==\"day\"] <- \"date\"\nposts$date <- as.Date(posts$date)\nstr(posts$date)\n\n# set 'created_at' to POSIXlt\nposts$created_at <- as.character(posts$created_at)\noptions(digits.secs = 3)\nposts$created_at <- strptime(posts$created_at, \"%Y-%m-%dT%H:%M:%S\", tz = \"America/Los_Angeles\")\nstr(posts$created_at)\n\n# set 'name' and 'tagline' to characters\nposts$name <- as.character(posts$name)\nposts$tagline <- as.character(posts$tagline)\n\n# create a new variable called 'day' that is the day of the week the product was posted\nposts$day <- \"day\"\nposts$day <- weekdays(posts$date)\nstr(posts$day)\nposts$day <- as.factor(posts$day)\nstr(posts$day)\n\n# create a new variable 'time_of_day' that is the approximate time of day the product was posted\nposts$time_of_day <- \"time_of_day\"\nfor(i in 1:nrow(posts)) {\n  if(hour(posts$created_at[i]) >= 5 && hour(posts$created_at[i]) <= 11) {\n    posts$time_of_day[i] <- \"Morning\"\n  }\n  else if(hour(posts$created_at[i]) >= 12 && hour(posts$created_at[i]) <= 16) {\n    posts$time_of_day[i] <- \"Afternoon\"\n  }\n  else if(hour(posts$created_at[i]) >= 17 && hour(posts$created_at[i]) <= 20) {\n    posts$time_of_day[i] <- \"Evening\"\n  }\n  else if(hour(posts$created_at[i]) >= 21 || hour(posts$created_at[i]) <= 4) {\n    posts$time_of_day[i] <- \"Night\"\n  }\n}\nposts$time_of_day <- as.factor(posts$time_of_day)\nstr(posts$time_of_day)\n\n# rearrange the columns\nnames(posts)\nrefcols <- c(\"id\", \"date\", \"day\", \"created_at\", \"time_of_day\")\nposts <- posts[, c(refcols, setdiff(names(posts), refcols))]\nstr(posts)\n\nstr(posts$votes_count)\nnames(posts)\n# remove a week's worth of the most recent posts,\n# because they haven't been given a lot of time for votes\nolder_posts <- posts[150:nrow(posts),]\n\n# write out some CSVs with current changes\nwrite.csv(posts, \"./AllPosts.csv\", row.names = FALSE)\nwrite.csv(older_posts, \"./PostsForAnalysis.csv\", row.names = FALSE)\n\n# hitting limit on data.world, so replace all \"FALSE\" with NULL\nolder_posts_with_nulls <- older_posts\nfor (j in 13:313) {\n  for (i in 1:nrow(older_posts_with_nulls)){\n    if(older_posts_with_nulls[i,j] == \"false\") {\n      older_posts_with_nulls[i,j] <- \"\"\n    }\n  }\n}\nwrite.csv(older_posts_with_nulls, \"./PostsForAnalysis2.csv\", na = \"\", row.names = FALSE)\n\nsummary(older_posts$tech)\nsummary(older_posts_with_nulls$tech)\n\nlm <- train(votes_count~., data=older_posts, method=lm)\n\n\nposts$time_of_day2 <- \"time_of_day\"\nfor(i in 1:nrow(posts)) {\n  if(hour(posts$created_at[i]) >= 5 && hour(posts$created_at[i]) <= 7) {\n    posts$time_of_day2[i] <- \"EarlyMorning\"\n  }\n  else if(hour(posts$created_at[i]) >= 8 && hour(posts$created_at[i]) <= 10) {\n    posts$time_of_day2[i] <- \"Morning\"\n  }\n  else if(hour(posts$created_at[i]) == 11) {\n    posts$time_of_day2[i] <- \"LateMorning\"\n  }\n  else if(hour(posts$created_at[i]) == 12) {\n    posts$time_of_day2[i] <- \"MidDay\"\n  }\n  else if(hour(posts$created_at[i]) == 13) {\n    posts$time_of_day2[i] <- \"EarlyAfternoon\"\n  }\n  else if(hour(posts$created_at[i]) == 14 || hour(posts$created_at[i]) == 15) {\n    posts$time_of_day2[i] <- \"Afternoon\"\n  }\n  else if(hour(posts$created_at[i]) == 16) {\n    posts$time_of_day2[i] <- \"LateAfternoon\"\n  }\n  else if(hour(posts$created_at[i]) == 17 || hour(posts$created_at[i]) == 18) {\n    posts$time_of_day2[i] <- \"EarlyEvening\"\n  }\n  else if(hour(posts$created_at[i]) == 19 || hour(posts$created_at[i]) == 20) {\n    posts$time_of_day2[i] <- \"Evening\"\n  }\n  else if(hour(posts$created_at[i]) >= 21 || hour(posts$created_at[i]) <= 4) {\n    posts$time_of_day2[i] <- \"Night\"\n  }\n}",
    "created" : 1479496167999.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2163276405",
    "id" : "4D5E4150",
    "lastKnownWriteTime" : 1480552930,
    "last_content_update" : 1480552930881,
    "path" : "~/code/R projects/ProductHunt/ProductHunt.R",
    "project_path" : "ProductHunt.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}